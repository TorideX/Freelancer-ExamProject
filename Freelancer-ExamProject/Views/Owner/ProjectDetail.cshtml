@model Freelancer_Exam.ViewModels.ProjectDetailViewModel

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}

<div class="row p-3 d-flex w-100 justify-content-between">
    <div class="card m-3 col-md-12 justify-content-center" style="width: 50rem">
        <div class="card-body">
            <h5 class="card-title text-success">
                <a href="/Owner/Project/Details/@Model.ProjectId"> </a>@Model.Title
            </h5>
            <p class="card-text">@Model.Description</p>
            <br>
            <p>@Model.MinPrice$ - @Model.MaxPrice$</p>
            <span class="text-sm-left small text-black-50">
                Required Skill
                @foreach (var sk in @Model.RequiredSkill) {
                    <span class='badge badge-success user-select-none ml-2'>@sk.Name</span>
                }
            </span>
            <br>
            <hr/>
            @switch (Model.Status) {
                case Status.Pending:
                    <span class="badge badge-warning">Pending</span>
                    break;
                case Status.Working:
                    <span class="badge badge-info">Working</span>
                    break;
                case Status.Completed:
                    <span class="badge badge-success">Completed</span>
                    break;
            }
        </div>
    </div>
</div>
@if (Model.BidRequestViewModels != null && Model.BidRequestViewModels.Count > 0) {
    <h3 class="pl-3">Requests</h3>
    <div class="row p-3 d-flex w-100 justify-content-between">
        @foreach (var br in @Model.BidRequestViewModels) {
            <div class="card m-3 col-md-12 justify-content-center" style="width: 30rem">
                <div class="card-body">
                    <p class="text-dark">Developer: <span class="text-black-50">@br.DeveloperViewModel.User.Name @br.DeveloperViewModel.User.Surname</span></p>
                    <p class="text-dark">Developer rating: <span class="text-black-50">@br.DeveloperViewModel.Rating</span> </p>
                    <p class="text-dark">Price: <span class="text-black-50">@br.Price</span></p>
                    <p class="text-dark">Developers skill:
                        @foreach (var sk in @br.DeveloperViewModel.DeveloperSkillViewModel) {
                            <span class="badge badge-success">@sk.Name</span>
                        }
                    </p>
                    <p>
                        @switch (br.RequestStatus) {
                            case RequestStatus.Rejected:
                                <span class="badge badge-danger">Rejected</span>
                                break;
                            case RequestStatus.Pending:
                                <span class="badge badge-warning">Pending</span>
                                break;
                            case RequestStatus.Confirmed:
                                <span class="badge badge-success">Confirmed</span>
                                break;
                            default:
                                throw new ArgumentOutOfRangeException();
                        }
                        @if (br.RequestStatus == RequestStatus.Pending) {
                            <a href="/Owner/AcceptBidRequest/?userId=@Model.OwnerViewModel.Id&RequestId=@br.BidRequestId">Apply Request</a>
                        }
                    </p>
                </div>
            </div>
        }
    </div>
}