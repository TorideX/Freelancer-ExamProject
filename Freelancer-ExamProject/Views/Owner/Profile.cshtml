@using Freelancer_Exam.Entities
@model Freelancer_Exam.ViewModels.ownerprofVM

@{
    ViewData["Title"] = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    .prof-photo {
        width: 278px;
        height: 278px;
    }
    
    .img-container {
        position: relative;
        width: 100%;
        max-width: 400px;
    }
    
    .img-container img {
        width: 100%;
        height: auto;
    }
    
    .img-container .btn {
        outline: none;
        box-shadow: none;
        position: absolute;
        bottom: 0;
        right: 0;
        background-color: rgb(230, 230, 230);
        color: black;
        font-size: 10px;
        border: none;
        cursor: pointer;
        -ms-border-radius: 5px;
        border-radius: 5px;
        text-align: center;
    }

    .container .btn:hover {
        background-color: black;
        color: white;
    }
    
    input[type="file"] {
        width: 100%;
        height: 100%;
        opacity: 0;
        filter: alpha(opacity=0);
        zoom: 1;
        position: absolute;
        top: 0;
        left: 0;
        z-index: 999;
    }
</style>

<div class="row mt-lg-3 p-3" style="background-color: #f8f8f8;">
    <div class="col-md-3">
        <form class="img-container" id="upload-form" enctype="multipart/form-data" method="post"
              asp-action="UploadProfilePhoto" asp-controller="Owner">
            @if (Model.Owner.User.ProfilePicture != null) {
                <img src="@Url.Content(Model.Owner.User.ProfilePicture)" class="prof-photo" style="width: 100%" alt="">
            }
            else {
                <img src="https://www.f-cdn.com/assets/main/en/assets/unknown.png" class="prof-photo" style="width: 100%" alt="">
            }
            <input id="file" name="file" accept="image/x-png,image/gif,image/jpeg" type="file"/>
            <button class="btn">
                <i class="fa fa-upload"></i>
            </button>
        </form>
        <br/>
        <p class="text-dark">Country: <span class="text-black-50">@Model.Owner.User.Country</span></p>
        <p class="text-dark">Joined: <span class="text-black-50">@Model.Owner.User.JoinedDate.ToString("yyyy MMMM dd")</span></p>
    </div>
    <div class="col-md-5 ml-lg-5">
        <div>
            <div class="d-flex">
                <input type="hidden" value="@Model.Owner.OwnerId" id="owner-id"/>
                <h3 class="mr-1">@Model.Owner.User.Name @Model.Owner.User.Surname</h3>
            </div>
            <a style="font-size: 20px;" class="text-muted">@Model.Owner.User.Email</a>
        </div>
    </div>
    <div class="col-md-12">
        <hr/>
        <button class="btn btn-primary" data-target="#myModal" data-toggle="modal">
            Publish Project
        </button>
    </div>

    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">


            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Publish Project</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <form class="form-group" id="form-project">
                        <input type="text" class="form-control" placeholder="Title" id="m-p-title" name="m-p-title"/>
                        <br/>
                        <input type="text" class="form-control" placeholder="Description" id="m-p-desc" name="m-p-desc"/>
                        <br/>
                        <input type="number" class="form-control" placeholder="Min Price" id="m-p-minPrice" name="m-p-minPrice"/>
                        <br/>
                        <input type="number" class="form-control" placeholder="Max Price" id="m-p-maxPrice" name="m-p-maxPrice"/>
                        <br/>
                        <div class="w-100">
                            <input id="modal-skill-input" type="text" class="form-control w-75 d-inline" placeholder="Skill">
                            <button id="modal-add-skill" class="btn btn-primary">Add Skill</button>
                        </div>
                        <div id="field-skills" class="d-flex flex-wrap">

                        </div>
                    </form>
                </div>

                <div class="modal-footer">
                    <button id="m-save-btn" type="button" class="btn btn-primary">Publish</button>
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                </div>

            </div>

        </div>
    </div>

    <div class="row p-3 d-flex w-100 justify-content-between">
        @if (Model.Owner.Projects != null) {
            @foreach (var proj in Model.Owner.Projects) {
                <div class="card m-3 col-md-12 justify-content-center" style="width: 50rem">
                    <div class="card-body">
                        <h5 class="card-title text-success">
                            <a href="/Owner/Project/Details/@proj.ProjectId"> </a>@proj.Title
                        </h5>
                        <p class="text-dark">Description: <span class="text-black-50">@proj.Description</span></p>
                        <p class="text-dark">Price: <span class="text-black-50">@proj.MinPrice$ - @proj.MaxPrice$</span></p>
                        <span class="text-sm-left small text-black-50">
                            Required Skill
                            @foreach (var sk in proj.ProjectSkill) {
                                <span class='badge badge-info user-select-none ml-2'>@sk.Skill.Name</span>
                            }
                        </span>
                        <br>

                        <hr/>
                        @switch (proj.Status) {
                            case Status.Pending:
                                <span class="badge badge-warning">Pending</span>
                                break;
                            case Status.Working:
                                <span class="badge badge-info">Working</span>
                                break;
                            case Status.Completed:
                                <span class="badge badge-success">Completed</span>
                                break;
                        }
                        <a class="ml-2 project-detail" href="/Owner/ProjectDetails/?projectId=@proj.ProjectId">Details</a>
                    </div>
                </div>
            }
        }
    </div>
</div>
<div class="row mt-lg-3 p-3">
    @for (int i = 1; i <= Model.PagingModel.PageCount; i++) {
        if (i != Model.PagingModel.CurrentPageIndex) {
            <a href="/Owner/Profile/?currentPage=@i&filterKeyword=@Model.FilterKeyword" class="btn btn-danger m-1">@i</a>
        }
        else {
            <a class="btn btn-info m-1">@i</a>
        }
    }
</div>
<script src="/lib/jquery/dist/jquery.js">
 
</script>
<script>
$('#m-save-btn').on('click', function() {
    const title = $('#m-p-title').val();
    const desc = $('#m-p-desc').val();
    const minPrice = $('#m-p-minPrice').val();
    const maxPrice = $('#m-p-maxPrice').val();
    if (+minPrice >= +maxPrice){
        return ;    
    }
    const spans = $('#field-skills').find("span");
    const skillArray = [];
    for (const span of spans) {
        skillArray.push(span.innerText);
    }

    const data = {
        Title: title,
        Description: desc,
        MinPrice: minPrice,
        MaxPrice: maxPrice,
        RequiredSkill: skillArray
    };
    const id = $('#owner-id').val();

    $.ajax(`/Owner/AddProject/${id}`, {
        method: "Post",
        data: JSON.stringify(data),
        contentType: "application/json; charset=utf-8",
        success() {
            window.location.reload();
        }
    });

})

$('#file').on('change', function() {
    $('#upload-form').submit();
});
$('#field-skills').on('click', '.remove-skill', function() {
    $(this).parent().remove();
});

$('.card').on('click','.project-detail',function (){
    const id = $(this).attr('id');
    
})

  function isEmptyOrSpaces(str) {
        return str === null || str.match(/^ *$/) !== null;
    }
$('#modal-add-skill').on('click', function(e) {
    e.preventDefault();
    let duplicate = false;
    const skillName = $('#modal-skill-input').val();
    const spans = $("#field-skills").find("span");
    for (const span of spans) {
            if (span.innerText === skillName) {
                duplicate = true;
            }
    }
    if (duplicate === false && isEmptyOrSpaces(skillName) === false) {
        const html = `<span class='badge badge-success user-select-none m-2'>${skillName}<a href="#" class="m-1 remove-skill text-white"><i class='fa fa-close'></i></a></span>`;
        $("#field-skills").append(html);
        $('#modal-skill-input').val('');
    }
})
</script>